version: '3.9'

services:
  app:
    image: eth_wallet
    container_name: eth_wallets
    command: runserver 0.0.0.0:8000
    ports:
      - 8000:8000
    env_file:
      - ./.env.dev
    depends_on:
      - redis
      - migrate

  create_superuser:
    build: .
    command: create_superuser
    env_file:
      - ./.env.dev
    depends_on:
      - app

  db:
    image: postgres:17
    container_name: wallets_db
    restart: always
    env_file:
      - ./.env.db
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    image: eth_wallet
    restart: on-failure
    command: migrate
    env_file:
      - ./.env.dev
    depends_on:
      db:
        condition: service_healthy

  celery:
    image: eth_wallet
    entrypoint: ""
    command: celery -A ETHwallets worker -l INFO
    restart: always
    volumes:
      - ./celery/data/:/usr/utils/data/celery
    env_file:
      - ./.env.celery.flower
    depends_on:
      - app
      - redis
      - db

  flower:
    image: eth_wallet
    entrypoint: ""
    ports:
      - 5555:5555
    command: celery -A ETHwallets flower
    volumes:
      - ./.:/app
    env_file:
      - ./.env.celery.flower
    depends_on:
      - app
      - redis
      - celery
      - db

  redis:
    image: redis:4-alpine
    ports:
      - 6379:6379
    volumes:
      - ./redis/data/:/usr/utils/app
    env_file:
      - ./.env.dev


  prometheus:
    image: prom/prometheus:v2.53.4
    ports:
      - "9090:9090"
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana-enterprise:11.6.0
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana_storage:/var/lib/grafana
    depends_on:
      - prometheus


volumes:
  grafana_storage:
